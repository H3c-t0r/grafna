#!/bin/bash
#
# grafana-server        Startup script for Grafana
#
# chkconfig: 2345 80 05
# description: Grafana web server and backend
# processname: grafana
# config: /etc/grafana/grafana.ini
# pidfile: /var/run/grafana.pid
#
### BEGIN INIT INFO
# Provides:          grafana
# Required-Start:    $all
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: start and stop grafana-server
### END INIT INFO

# init.d / servicectl compatibility (openSUSE)
if [ -f /etc/rc.status ]; then
    . /etc/rc.status
    rc_reset
fi

# Source function library
. /etc/rc.d/init.d/functions

# Set the default values for grafana-server variables
PATH=/bin:/usr/bin:/sbin:/usr/sbin
PROG=grafana-server
GRAFANA_USER=grafana
GRAFANA_GROUP=grafana
GRAFANA_HOME=/usr/share/grafana
CONF_DIR=/etc/grafana
DATA_DIR=/var/lib/grafana
PLUGINS_DIR=/var/lib/grafana/plugins
LOG_DIR=/var/log/grafana
CONF_FILE=$CONF_DIR/grafana.ini
MAX_OPEN_FILES=10000

PID_FILE=/var/run/$PROG.pid
PID_FILE_TIMEOUT=10
DAEMON=/usr/sbin/$PROG

lockfile=/var/lock/subsys/$PROG

# Source the default Grafana environment file
if [ -f "/etc/sysconfig/$PROG" ]; then
    . /etc/sysconfig/$PROG
fi

DAEMON_OPTS="--pidfile=${PID_FILE} --config=${CONF_FILE} cfg:default.paths.data=${DATA_DIR} cfg:default.paths.logs=${LOG_DIR} cfg:default.paths.plugins=${PLUGINS_DIR}"

if [ "$EUID" != "0" ]; then
    echo "You need root privileges to run this script."
    exit 4
fi

start() {
    if [ -n "$MAX_OPEN_FILES" ]; then
      ulimit -n $MAX_OPEN_FILES
    fi
    if [ -n $LOG_DIR ] && [ ! -e $LOG_DIR ]; then
        mkdir -p "$LOG_DIR" && chown "$GRAFANA_USER":"$GRAFANA_GROUP" "$LOG_DIR"
    fi
    if [ -n $DATA_DIR ] && [ ! -e $DATA_DIR ]; then
        mkdir -p "$DATA_DIR" && chown "$GRAFANA_USER":"$GRAFANA_GROUP" "$DATA_DIR"
    fi
    if [ -n $PID_FILE ] && [ ! -e $PID_FILE ]; then
        touch "$PID_FILE" && chown "$GRAFANA_USER":"$GRAFANA_GROUP" "$PID_FILE"
    fi

    cd $GRAFANA_HOME
    echo -n $"Starting $PROG: "
    su -s /bin/sh -c "nohup ${DAEMON} ${DAEMON_OPTS} >> /dev/null 2>&1 &" $GRAFANA_USER 2> /dev/null    
    retval=$?
    if [ $retval -eq 0 ]; then
        timeout=0
        while : ; do
            [ ! -s $PID_FILE ] || break
            if [ $timeout -ge $PID_FILE_TIMEOUT ]; then
                retval=1
                break
            fi
            sleep 1 && echo -n "."
            timeout=$((timeout + 1))
        done
    fi
    [ $retval -eq 0 ] && touch $lockfile
    [ $retval -eq 0 ] && echo_success
    [ $retval -ne 0 ] && echo_failure
    echo
    return $retval
}

stop() {
    echo -n $"Stopping $PROG: "
    killproc -p ${PID_FILE} ${NAME}
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

rh_status() {
    status -p $PID_FILE $PROG
}

rh_status_q() {
    rh_status > /dev/null 2>&1
}

# See how we were called
case $1 in
    start)
        rh_status_q && exit 0
        start
        ;;
    stop)
        rh_status_q || exit 0
        stop
        ;;
    restart|force-reload)
        stop
        start
        ;;
    status)
        rh_status
        ;;
    *)
        echo $"Usage: $PROG {start|stop|restart|force-reload|status}"
        exit 3
        ;;
esac
exit $?
