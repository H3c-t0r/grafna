// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AlertNotification alert notification
//
// swagger:model AlertNotification
type AlertNotification struct {

	// created
	// Format: date-time
	Created strfmt.DateTime `json:"created,omitempty"`

	// disable resolve message
	DisableResolveMessage bool `json:"disableResolveMessage,omitempty"`

	// Id
	ID int64 `json:"id,omitempty"`

	// is default
	IsDefault bool `json:"isDefault,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// send reminder
	SendReminder bool `json:"sendReminder,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// updated
	// Format: date-time
	Updated strfmt.DateTime `json:"updated,omitempty"`

	// frequency
	Frequency Duration `json:"frequency,omitempty"`

	// secure settings
	SecureSettings SecureJSONData `json:"secureSettings,omitempty"`

	// settings
	Settings JSON `json:"settings,omitempty"`
}

// Validate validates this alert notification
func (m *AlertNotification) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreated(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdated(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecureSettings(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AlertNotification) validateCreated(formats strfmt.Registry) error {

	if swag.IsZero(m.Created) { // not required
		return nil
	}

	if err := validate.FormatOf("created", "body", "date-time", m.Created.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AlertNotification) validateUpdated(formats strfmt.Registry) error {

	if swag.IsZero(m.Updated) { // not required
		return nil
	}

	if err := validate.FormatOf("updated", "body", "date-time", m.Updated.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AlertNotification) validateSecureSettings(formats strfmt.Registry) error {

	if swag.IsZero(m.SecureSettings) { // not required
		return nil
	}

	if err := m.SecureSettings.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("secureSettings")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AlertNotification) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AlertNotification) UnmarshalBinary(b []byte) error {
	var res AlertNotification
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
