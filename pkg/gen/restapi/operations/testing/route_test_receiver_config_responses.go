// Code generated by go-swagger; DO NOT EDIT.

package testing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/grafana/alerting-api/pkg/gen/models"
)

// RouteTestReceiverConfigOKCode is the HTTP code returned for type RouteTestReceiverConfigOK
const RouteTestReceiverConfigOKCode int = 200

/*RouteTestReceiverConfigOK Success

swagger:response routeTestReceiverConfigOK
*/
type RouteTestReceiverConfigOK struct {

	/*
	  In: Body
	*/
	Payload *models.Success `json:"body,omitempty"`
}

// NewRouteTestReceiverConfigOK creates RouteTestReceiverConfigOK with default headers values
func NewRouteTestReceiverConfigOK() *RouteTestReceiverConfigOK {

	return &RouteTestReceiverConfigOK{}
}

// WithPayload adds the payload to the route test receiver config o k response
func (o *RouteTestReceiverConfigOK) WithPayload(payload *models.Success) *RouteTestReceiverConfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route test receiver config o k response
func (o *RouteTestReceiverConfigOK) SetPayload(payload *models.Success) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RouteTestReceiverConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RouteTestReceiverConfigPreconditionFailedCode is the HTTP code returned for type RouteTestReceiverConfigPreconditionFailed
const RouteTestReceiverConfigPreconditionFailedCode int = 412

/*RouteTestReceiverConfigPreconditionFailed SmtpNotEnabled

swagger:response routeTestReceiverConfigPreconditionFailed
*/
type RouteTestReceiverConfigPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.SMTPNotEnabled `json:"body,omitempty"`
}

// NewRouteTestReceiverConfigPreconditionFailed creates RouteTestReceiverConfigPreconditionFailed with default headers values
func NewRouteTestReceiverConfigPreconditionFailed() *RouteTestReceiverConfigPreconditionFailed {

	return &RouteTestReceiverConfigPreconditionFailed{}
}

// WithPayload adds the payload to the route test receiver config precondition failed response
func (o *RouteTestReceiverConfigPreconditionFailed) WithPayload(payload *models.SMTPNotEnabled) *RouteTestReceiverConfigPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route test receiver config precondition failed response
func (o *RouteTestReceiverConfigPreconditionFailed) SetPayload(payload *models.SMTPNotEnabled) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RouteTestReceiverConfigPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RouteTestReceiverConfigInternalServerErrorCode is the HTTP code returned for type RouteTestReceiverConfigInternalServerError
const RouteTestReceiverConfigInternalServerErrorCode int = 500

/*RouteTestReceiverConfigInternalServerError Failure

swagger:response routeTestReceiverConfigInternalServerError
*/
type RouteTestReceiverConfigInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Failure `json:"body,omitempty"`
}

// NewRouteTestReceiverConfigInternalServerError creates RouteTestReceiverConfigInternalServerError with default headers values
func NewRouteTestReceiverConfigInternalServerError() *RouteTestReceiverConfigInternalServerError {

	return &RouteTestReceiverConfigInternalServerError{}
}

// WithPayload adds the payload to the route test receiver config internal server error response
func (o *RouteTestReceiverConfigInternalServerError) WithPayload(payload *models.Failure) *RouteTestReceiverConfigInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route test receiver config internal server error response
func (o *RouteTestReceiverConfigInternalServerError) SetPayload(payload *models.Failure) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RouteTestReceiverConfigInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
