// Code generated by go-swagger; DO NOT EDIT.

package alertmanager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/grafana/alerting-api/pkg/gen/models"
)

// RoutePostAlertingConfigCreatedCode is the HTTP code returned for type RoutePostAlertingConfigCreated
const RoutePostAlertingConfigCreatedCode int = 201

/*RoutePostAlertingConfigCreated Ack

swagger:response routePostAlertingConfigCreated
*/
type RoutePostAlertingConfigCreated struct {

	/*
	  In: Body
	*/
	Payload models.Ack `json:"body,omitempty"`
}

// NewRoutePostAlertingConfigCreated creates RoutePostAlertingConfigCreated with default headers values
func NewRoutePostAlertingConfigCreated() *RoutePostAlertingConfigCreated {

	return &RoutePostAlertingConfigCreated{}
}

// WithPayload adds the payload to the route post alerting config created response
func (o *RoutePostAlertingConfigCreated) WithPayload(payload models.Ack) *RoutePostAlertingConfigCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route post alerting config created response
func (o *RoutePostAlertingConfigCreated) SetPayload(payload models.Ack) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RoutePostAlertingConfigCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// RoutePostAlertingConfigBadRequestCode is the HTTP code returned for type RoutePostAlertingConfigBadRequest
const RoutePostAlertingConfigBadRequestCode int = 400

/*RoutePostAlertingConfigBadRequest ValidationError

swagger:response routePostAlertingConfigBadRequest
*/
type RoutePostAlertingConfigBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ValidationError `json:"body,omitempty"`
}

// NewRoutePostAlertingConfigBadRequest creates RoutePostAlertingConfigBadRequest with default headers values
func NewRoutePostAlertingConfigBadRequest() *RoutePostAlertingConfigBadRequest {

	return &RoutePostAlertingConfigBadRequest{}
}

// WithPayload adds the payload to the route post alerting config bad request response
func (o *RoutePostAlertingConfigBadRequest) WithPayload(payload *models.ValidationError) *RoutePostAlertingConfigBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route post alerting config bad request response
func (o *RoutePostAlertingConfigBadRequest) SetPayload(payload *models.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RoutePostAlertingConfigBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
