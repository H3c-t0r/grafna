// Code generated by go-swagger; DO NOT EDIT.

package alertmanager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/grafana/alerting-api/pkg/gen/models"
)

// RouteGetAlertingConfigOKCode is the HTTP code returned for type RouteGetAlertingConfigOK
const RouteGetAlertingConfigOKCode int = 200

/*RouteGetAlertingConfigOK AlertingConfigResponse

swagger:response routeGetAlertingConfigOK
*/
type RouteGetAlertingConfigOK struct {

	/*
	  In: Body
	*/
	Payload *models.AlertingConfigResponse `json:"body,omitempty"`
}

// NewRouteGetAlertingConfigOK creates RouteGetAlertingConfigOK with default headers values
func NewRouteGetAlertingConfigOK() *RouteGetAlertingConfigOK {

	return &RouteGetAlertingConfigOK{}
}

// WithPayload adds the payload to the route get alerting config o k response
func (o *RouteGetAlertingConfigOK) WithPayload(payload *models.AlertingConfigResponse) *RouteGetAlertingConfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route get alerting config o k response
func (o *RouteGetAlertingConfigOK) SetPayload(payload *models.AlertingConfigResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RouteGetAlertingConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RouteGetAlertingConfigBadRequestCode is the HTTP code returned for type RouteGetAlertingConfigBadRequest
const RouteGetAlertingConfigBadRequestCode int = 400

/*RouteGetAlertingConfigBadRequest ValidationError

swagger:response routeGetAlertingConfigBadRequest
*/
type RouteGetAlertingConfigBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ValidationError `json:"body,omitempty"`
}

// NewRouteGetAlertingConfigBadRequest creates RouteGetAlertingConfigBadRequest with default headers values
func NewRouteGetAlertingConfigBadRequest() *RouteGetAlertingConfigBadRequest {

	return &RouteGetAlertingConfigBadRequest{}
}

// WithPayload adds the payload to the route get alerting config bad request response
func (o *RouteGetAlertingConfigBadRequest) WithPayload(payload *models.ValidationError) *RouteGetAlertingConfigBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route get alerting config bad request response
func (o *RouteGetAlertingConfigBadRequest) SetPayload(payload *models.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RouteGetAlertingConfigBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
