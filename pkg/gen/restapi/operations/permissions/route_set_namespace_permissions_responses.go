// Code generated by go-swagger; DO NOT EDIT.

package permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/grafana/alerting-api/pkg/gen/models"
)

// RouteSetNamespacePermissionsCreatedCode is the HTTP code returned for type RouteSetNamespacePermissionsCreated
const RouteSetNamespacePermissionsCreatedCode int = 201

/*RouteSetNamespacePermissionsCreated Ack

swagger:response routeSetNamespacePermissionsCreated
*/
type RouteSetNamespacePermissionsCreated struct {

	/*
	  In: Body
	*/
	Payload models.Ack `json:"body,omitempty"`
}

// NewRouteSetNamespacePermissionsCreated creates RouteSetNamespacePermissionsCreated with default headers values
func NewRouteSetNamespacePermissionsCreated() *RouteSetNamespacePermissionsCreated {

	return &RouteSetNamespacePermissionsCreated{}
}

// WithPayload adds the payload to the route set namespace permissions created response
func (o *RouteSetNamespacePermissionsCreated) WithPayload(payload models.Ack) *RouteSetNamespacePermissionsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route set namespace permissions created response
func (o *RouteSetNamespacePermissionsCreated) SetPayload(payload models.Ack) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RouteSetNamespacePermissionsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// RouteSetNamespacePermissionsBadRequestCode is the HTTP code returned for type RouteSetNamespacePermissionsBadRequest
const RouteSetNamespacePermissionsBadRequestCode int = 400

/*RouteSetNamespacePermissionsBadRequest ValidationError

swagger:response routeSetNamespacePermissionsBadRequest
*/
type RouteSetNamespacePermissionsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ValidationError `json:"body,omitempty"`
}

// NewRouteSetNamespacePermissionsBadRequest creates RouteSetNamespacePermissionsBadRequest with default headers values
func NewRouteSetNamespacePermissionsBadRequest() *RouteSetNamespacePermissionsBadRequest {

	return &RouteSetNamespacePermissionsBadRequest{}
}

// WithPayload adds the payload to the route set namespace permissions bad request response
func (o *RouteSetNamespacePermissionsBadRequest) WithPayload(payload *models.ValidationError) *RouteSetNamespacePermissionsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route set namespace permissions bad request response
func (o *RouteSetNamespacePermissionsBadRequest) SetPayload(payload *models.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RouteSetNamespacePermissionsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
