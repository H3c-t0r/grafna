// Code generated by Errata. DO NOT EDIT.
// Errata Schema Version: {{ SchemaVersion }}
// Grafana errors schema version: 1
// Hash: {{ Hash }}
package {{ Package }}

import (
  "github.com/grafana/grafana/pkg/util/errutil"
)

var (
{%- for code, error in Errors sorted %}
  Err{{ code | constantize }} = errutil.NewBase(
    {%- if error.Cause %}
    errutil.Status{{ error.Cause }},
    {%- else %}
    errutil.StatusMissing, // Fixme: Set 'cause' to one of the statuses defined as "errutil.Status*".
    {%- endif %}
    {{ code | stringformat:"%q" }},
    {%- if error.Message && !error.Labels.template %}
    errutil.WithPublicMessage(`{{ error.Message | escape_backtick -}}`),
    {%- endif %}
    {%- if error.Labels.severity %}
    errutil.WithLogLevel(errutil.Level{{ error.Labels.severity | capfirst }}),
    {%- endif %}
    {%- if error.Guide %}
    errutil.WithGuide(`{{ error.Guide | escape_backtick -}}`),
    {%- endif %}
  ){%- if error.Labels.template %}.MustTemplate(
    {%- if error.Labels.logMessage %}
    `{{ error.Labels.logMessage | escape_backtick -}}`,
    errutil.WithPublic(`{{ error.Message | escape_backtick -}}`),
    {%- else %}
    `{{ error.Message | escape_backtick -}}`,
    errutil.WithPublicFromLog(),
    {%- endif %}
  ){%- endif %}
{%- endfor %}
)
