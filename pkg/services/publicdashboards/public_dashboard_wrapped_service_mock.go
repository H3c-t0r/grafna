// Code generated by mockery v2.14.0. DO NOT EDIT.

package publicdashboards

import (
	context "context"

	models "github.com/grafana/grafana/pkg/services/publicdashboards/models"
	mock "github.com/stretchr/testify/mock"
)

// FakeWrappedPublicDashboardService is an autogenerated mock type for the WrappedService type
type FakeWrappedPublicDashboardService struct {
	mock.Mock
}

// FindByDashboardUid provides a mock function with given fields: ctx, orgId, dashboardUid
func (_m *FakeWrappedPublicDashboardService) FindByDashboardUid(ctx context.Context, orgId int64, dashboardUid string) (*models.PublicDashboard, error) {
	ret := _m.Called(ctx, orgId, dashboardUid)

	var r0 *models.PublicDashboard
	if rf, ok := ret.Get(0).(func(context.Context, int64, string) *models.PublicDashboard); ok {
		r0 = rf(ctx, orgId, dashboardUid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.PublicDashboard)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int64, string) error); ok {
		r1 = rf(ctx, orgId, dashboardUid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewFakeWrappedPublicDashboardService interface {
	mock.TestingT
	Cleanup(func())
}

// NewFakeWrappedPublicDashboardService creates a new instance of FakeWrappedPublicDashboardService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFakeWrappedPublicDashboardService(t mockConstructorTestingTNewFakeWrappedPublicDashboardService) *FakeWrappedPublicDashboardService {
	mock := &FakeWrappedPublicDashboardService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
