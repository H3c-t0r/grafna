// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     public/app/plugins/gen.go
// Using jennies:
//     GoTypesJenny
//     PluginGoTypesJenny
//
// Run 'make gen-cue' from repository root to regenerate.

package CloudWatchDataQuery

// Defines values for LogsQueryQueryMode.
const (
	LogsQueryQueryModeAnnotations LogsQueryQueryMode = "Annotations"

	LogsQueryQueryModeLogs LogsQueryQueryMode = "Logs"

	LogsQueryQueryModeMetrics LogsQueryQueryMode = "Metrics"
)

// Defines values for MetricsQueryMetricEditorMode.
const (
	MetricsQueryMetricEditorModeN0 MetricsQueryMetricEditorMode = 0

	MetricsQueryMetricEditorModeN1 MetricsQueryMetricEditorMode = 1
)

// Defines values for MetricsQueryMetricQueryType.
const (
	MetricsQueryMetricQueryTypeN0 MetricsQueryMetricQueryType = 0

	MetricsQueryMetricQueryTypeN1 MetricsQueryMetricQueryType = 1
)

// Defines values for MetricsQueryQueryMode.
const (
	MetricsQueryQueryModeAnnotations MetricsQueryQueryMode = "Annotations"

	MetricsQueryQueryModeLogs MetricsQueryQueryMode = "Logs"

	MetricsQueryQueryModeMetrics MetricsQueryQueryMode = "Metrics"
)

// Defines values for MetricsQuerySqlGroupByType.
const (
	MetricsQuerySqlGroupByTypeAnd MetricsQuerySqlGroupByType = "and"

	MetricsQuerySqlGroupByTypeOr MetricsQuerySqlGroupByType = "or"
)

// Defines values for MetricsQuerySqlOrderByParametersType.
const (
	MetricsQuerySqlOrderByParametersTypeFunctionParameter MetricsQuerySqlOrderByParametersType = "functionParameter"
)

// Defines values for MetricsQuerySqlOrderByType.
const (
	MetricsQuerySqlOrderByTypeFunction MetricsQuerySqlOrderByType = "function"
)

// Defines values for MetricsQuerySqlSelectParametersType.
const (
	MetricsQuerySqlSelectParametersTypeFunctionParameter MetricsQuerySqlSelectParametersType = "functionParameter"
)

// Defines values for MetricsQuerySqlSelectType.
const (
	MetricsQuerySqlSelectTypeFunction MetricsQuerySqlSelectType = "function"
)

// Defines values for MetricsQuerySqlWhereType.
const (
	MetricsQuerySqlWhereTypeAnd MetricsQuerySqlWhereType = "and"

	MetricsQuerySqlWhereTypeOr MetricsQuerySqlWhereType = "or"
)

// Defines values for QueryMode.
const (
	QueryModeAnnotations QueryMode = "Annotations"

	QueryModeLogs QueryMode = "Logs"

	QueryModeMetrics QueryMode = "Metrics"
)

// Defines values for MetricEditorMode.
const (
	MetricEditorModeN0 MetricEditorMode = 0

	MetricEditorModeN1 MetricEditorMode = 1
)

// Defines values for MetricQueryType.
const (
	MetricQueryTypeN0 MetricQueryType = 0

	MetricQueryTypeN1 MetricQueryType = 1
)

// Defines values for QueryEditorArrayExpressionType.
const (
	QueryEditorArrayExpressionTypeAnd QueryEditorArrayExpressionType = "and"

	QueryEditorArrayExpressionTypeOr QueryEditorArrayExpressionType = "or"
)

// Defines values for QueryEditorExpressionType.
const (
	QueryEditorExpressionTypeAnd QueryEditorExpressionType = "and"

	QueryEditorExpressionTypeFunction QueryEditorExpressionType = "function"

	QueryEditorExpressionTypeFunctionParameter QueryEditorExpressionType = "functionParameter"

	QueryEditorExpressionTypeGroupBy QueryEditorExpressionType = "groupBy"

	QueryEditorExpressionTypeOperator QueryEditorExpressionType = "operator"

	QueryEditorExpressionTypeOr QueryEditorExpressionType = "or"

	QueryEditorExpressionTypeProperty QueryEditorExpressionType = "property"
)

// Defines values for QueryEditorFunctionExpressionParametersType.
const (
	QueryEditorFunctionExpressionParametersTypeFunctionParameter QueryEditorFunctionExpressionParametersType = "functionParameter"
)

// Defines values for QueryEditorFunctionExpressionType.
const (
	QueryEditorFunctionExpressionTypeFunction QueryEditorFunctionExpressionType = "function"
)

// Defines values for QueryEditorFunctionParameterExpressionType.
const (
	QueryEditorFunctionParameterExpressionTypeFunctionParameter QueryEditorFunctionParameterExpressionType = "functionParameter"
)

// Defines values for QueryEditorGroupByExpressionPropertyType.
const (
	QueryEditorGroupByExpressionPropertyTypeString QueryEditorGroupByExpressionPropertyType = "string"

	QueryEditorGroupByExpressionPropertyTypeTest QueryEditorGroupByExpressionPropertyType = "test"
)

// Defines values for QueryEditorGroupByExpressionType.
const (
	QueryEditorGroupByExpressionTypeGroupBy QueryEditorGroupByExpressionType = "groupBy"
)

// Defines values for QueryEditorOperatorExpressionPropertyType.
const (
	QueryEditorOperatorExpressionPropertyTypeString QueryEditorOperatorExpressionPropertyType = "string"

	QueryEditorOperatorExpressionPropertyTypeTest QueryEditorOperatorExpressionPropertyType = "test"
)

// Defines values for QueryEditorOperatorExpressionType.
const (
	QueryEditorOperatorExpressionTypeOperator QueryEditorOperatorExpressionType = "operator"
)

// Defines values for QueryEditorPropertyType.
const (
	QueryEditorPropertyTypeString QueryEditorPropertyType = "string"

	QueryEditorPropertyTypeTest QueryEditorPropertyType = "test"
)

// Defines values for QueryEditorPropertyExpressionPropertyType.
const (
	QueryEditorPropertyExpressionPropertyTypeString QueryEditorPropertyExpressionPropertyType = "string"

	QueryEditorPropertyExpressionPropertyTypeTest QueryEditorPropertyExpressionPropertyType = "test"
)

// Defines values for QueryEditorPropertyExpressionType.
const (
	QueryEditorPropertyExpressionTypeProperty QueryEditorPropertyExpressionType = "property"
)

// Defines values for SQLExpressionGroupByType.
const (
	SQLExpressionGroupByTypeAnd SQLExpressionGroupByType = "and"

	SQLExpressionGroupByTypeOr SQLExpressionGroupByType = "or"
)

// Defines values for SQLExpressionOrderByParametersType.
const (
	SQLExpressionOrderByParametersTypeFunctionParameter SQLExpressionOrderByParametersType = "functionParameter"
)

// Defines values for SQLExpressionOrderByType.
const (
	SQLExpressionOrderByTypeFunction SQLExpressionOrderByType = "function"
)

// Defines values for SQLExpressionSelectParametersType.
const (
	SQLExpressionSelectParametersTypeFunctionParameter SQLExpressionSelectParametersType = "functionParameter"
)

// Defines values for SQLExpressionSelectType.
const (
	SQLExpressionSelectTypeFunction SQLExpressionSelectType = "function"
)

// Defines values for SQLExpressionWhereType.
const (
	SQLExpressionWhereTypeAnd SQLExpressionWhereType = "and"

	SQLExpressionWhereTypeOr SQLExpressionWhereType = "or"
)

// DataQuery defines model for DataQuery.
type DataQuery struct {
	// For mixed data sources the selected datasource is on the query level.
	// For non mixed scenarios this is undefined.
	// TODO find a better way to do this ^ that's friendly to schema
	// TODO this shouldn't be unknown but DataSourceRef | null
	Datasource *interface{} `json:"datasource,omitempty"`

	// true if query is disabled (ie should not be returned to the dashboard)
	Hide *bool `json:"hide,omitempty"`

	// Unique, guid like, string used in explore mode
	Key *string `json:"key,omitempty"`

	// Specify the query flavor
	// TODO make this required and give it a default
	QueryType *string `json:"queryType,omitempty"`

	// A - Z
	RefId string `json:"refId"`
}

// LogsQuery defines model for LogsQuery.
type LogsQuery struct {
	Expression *string `json:"expression,omitempty"`
	Id         string  `json:"id"`

	// deprecated, use logGroups instead
	LogGroupNames *[]string `json:"logGroupNames,omitempty"`
	LogGroups     *[]struct {
		AccountId    *string `json:"accountId,omitempty"`
		AccountLabel *string `json:"accountLabel,omitempty"`
		Arn          string  `json:"arn"`
		Name         string  `json:"name"`
	} `json:"logGroups,omitempty"`
	QueryMode   LogsQueryQueryMode `json:"queryMode"`
	Region      string             `json:"region"`
	StatsGroups *[]string          `json:"statsGroups,omitempty"`
}

// LogsQueryQueryMode defines model for LogsQuery.QueryMode.
type LogsQueryQueryMode string

// #MetricsQuery | #LogsQuery
type MetricsQuery struct {
	Alias *string `json:"alias,omitempty"`

	// Math expression query
	Expression *string `json:"expression,omitempty"`

	// common props
	Id               string                        `json:"id"`
	Label            *string                       `json:"label,omitempty"`
	MetricEditorMode *MetricsQueryMetricEditorMode `json:"metricEditorMode,omitempty"`
	MetricQueryType  *MetricsQueryMetricQueryType  `json:"metricQueryType,omitempty"`
	QueryMode        *MetricsQueryQueryMode        `json:"queryMode,omitempty"`
	Sql              *struct {
		From    *interface{} `json:"from,omitempty"`
		GroupBy *struct {
			Expressions interface{}                `json:"expressions"`
			Type        MetricsQuerySqlGroupByType `json:"type"`
		} `json:"groupBy,omitempty"`
		Limit   *int64 `json:"limit,omitempty"`
		OrderBy *struct {
			Name       *string `json:"name,omitempty"`
			Parameters *[]struct {
				Name *string                              `json:"name,omitempty"`
				Type MetricsQuerySqlOrderByParametersType `json:"type"`
			} `json:"parameters,omitempty"`
			Type MetricsQuerySqlOrderByType `json:"type"`
		} `json:"orderBy,omitempty"`
		OrderByDirection *string `json:"orderByDirection,omitempty"`
		Select           *struct {
			Name       *string `json:"name,omitempty"`
			Parameters *[]struct {
				Name *string                             `json:"name,omitempty"`
				Type MetricsQuerySqlSelectParametersType `json:"type"`
			} `json:"parameters,omitempty"`
			Type MetricsQuerySqlSelectType `json:"type"`
		} `json:"select,omitempty"`
		Where *struct {
			Expressions interface{}              `json:"expressions"`
			Type        MetricsQuerySqlWhereType `json:"type"`
		} `json:"where,omitempty"`
	} `json:"sql,omitempty"`
	SqlExpression *string `json:"sqlExpression,omitempty"`
}

// MetricsQueryMetricEditorMode defines model for MetricsQuery.MetricEditorMode.
type MetricsQueryMetricEditorMode int

// MetricsQueryMetricQueryType defines model for MetricsQuery.MetricQueryType.
type MetricsQueryMetricQueryType int

// MetricsQueryQueryMode defines model for MetricsQuery.QueryMode.
type MetricsQueryQueryMode string

// MetricsQuerySqlGroupByType defines model for MetricsQuery.Sql.GroupBy.Type.
type MetricsQuerySqlGroupByType string

// MetricsQuerySqlOrderByParametersType defines model for MetricsQuery.Sql.OrderBy.Parameters.Type.
type MetricsQuerySqlOrderByParametersType string

// MetricsQuerySqlOrderByType defines model for MetricsQuery.Sql.OrderBy.Type.
type MetricsQuerySqlOrderByType string

// MetricsQuerySqlSelectParametersType defines model for MetricsQuery.Sql.Select.Parameters.Type.
type MetricsQuerySqlSelectParametersType string

// MetricsQuerySqlSelectType defines model for MetricsQuery.Sql.Select.Type.
type MetricsQuerySqlSelectType string

// MetricsQuerySqlWhereType defines model for MetricsQuery.Sql.Where.Type.
type MetricsQuerySqlWhereType string

// QueryMode defines model for QueryMode.
type QueryMode string

// LogGroup defines model for LogGroup.
type LogGroup struct {
	AccountId    *string `json:"accountId,omitempty"`
	AccountLabel *string `json:"accountLabel,omitempty"`
	Arn          string  `json:"arn"`
	Name         string  `json:"name"`
}

// MetricEditorMode defines model for MetricEditorMode.
type MetricEditorMode int

// MetricQueryType defines model for MetricQueryType.
type MetricQueryType int

// QueryEditorArrayExpression defines model for QueryEditorArrayExpression.
type QueryEditorArrayExpression struct {
	Expressions interface{}                    `json:"expressions"`
	Type        QueryEditorArrayExpressionType `json:"type"`
}

// QueryEditorArrayExpressionType defines model for QueryEditorArrayExpression.Type.
type QueryEditorArrayExpressionType string

// QueryEditorExpressionType defines model for QueryEditorExpressionType.
type QueryEditorExpressionType string

// QueryEditorFunctionExpression defines model for QueryEditorFunctionExpression.
type QueryEditorFunctionExpression struct {
	Name       *string `json:"name,omitempty"`
	Parameters *[]struct {
		Name *string                                     `json:"name,omitempty"`
		Type QueryEditorFunctionExpressionParametersType `json:"type"`
	} `json:"parameters,omitempty"`
	Type QueryEditorFunctionExpressionType `json:"type"`
}

// QueryEditorFunctionExpressionParametersType defines model for QueryEditorFunctionExpression.Parameters.Type.
type QueryEditorFunctionExpressionParametersType string

// QueryEditorFunctionExpressionType defines model for QueryEditorFunctionExpression.Type.
type QueryEditorFunctionExpressionType string

// QueryEditorFunctionParameterExpression defines model for QueryEditorFunctionParameterExpression.
type QueryEditorFunctionParameterExpression struct {
	Name *string                                    `json:"name,omitempty"`
	Type QueryEditorFunctionParameterExpressionType `json:"type"`
}

// QueryEditorFunctionParameterExpressionType defines model for QueryEditorFunctionParameterExpression.Type.
type QueryEditorFunctionParameterExpressionType string

// QueryEditorGroupByExpression defines model for QueryEditorGroupByExpression.
type QueryEditorGroupByExpression struct {
	Property struct {
		Name *string                                  `json:"name,omitempty"`
		Type QueryEditorGroupByExpressionPropertyType `json:"type"`
	} `json:"property"`
	Type QueryEditorGroupByExpressionType `json:"type"`
}

// QueryEditorGroupByExpressionPropertyType defines model for QueryEditorGroupByExpression.Property.Type.
type QueryEditorGroupByExpressionPropertyType string

// QueryEditorGroupByExpressionType defines model for QueryEditorGroupByExpression.Type.
type QueryEditorGroupByExpressionType string

// QueryEditorOperator defines model for QueryEditorOperator.
type QueryEditorOperator struct {
	Name  *string      `json:"name,omitempty"`
	Value *interface{} `json:"value,omitempty"`
}

// QueryEditorOperatorExpression defines model for QueryEditorOperatorExpression.
type QueryEditorOperatorExpression struct {
	Operator struct {
		Name  *string      `json:"name,omitempty"`
		Value *interface{} `json:"value,omitempty"`
	} `json:"operator"`
	Property struct {
		Name *string                                   `json:"name,omitempty"`
		Type QueryEditorOperatorExpressionPropertyType `json:"type"`
	} `json:"property"`
	Type QueryEditorOperatorExpressionType `json:"type"`
}

// QueryEditorOperatorExpressionPropertyType defines model for QueryEditorOperatorExpression.Property.Type.
type QueryEditorOperatorExpressionPropertyType string

// QueryEditorOperatorExpressionType defines model for QueryEditorOperatorExpression.Type.
type QueryEditorOperatorExpressionType string

// QueryEditorOperatorType defines model for QueryEditorOperatorType.
type QueryEditorOperatorType interface{}

// QueryEditorProperty defines model for QueryEditorProperty.
type QueryEditorProperty struct {
	Name *string                 `json:"name,omitempty"`
	Type QueryEditorPropertyType `json:"type"`
}

// QueryEditorPropertyType defines model for QueryEditorProperty.Type.
type QueryEditorPropertyType string

// QueryEditorPropertyExpression defines model for QueryEditorPropertyExpression.
type QueryEditorPropertyExpression struct {
	Property struct {
		Name *string                                   `json:"name,omitempty"`
		Type QueryEditorPropertyExpressionPropertyType `json:"type"`
	} `json:"property"`
	Type QueryEditorPropertyExpressionType `json:"type"`
}

// QueryEditorPropertyExpressionPropertyType defines model for QueryEditorPropertyExpression.Property.Type.
type QueryEditorPropertyExpressionPropertyType string

// QueryEditorPropertyExpressionType defines model for QueryEditorPropertyExpression.Type.
type QueryEditorPropertyExpressionType string

// SQLExpression defines model for SQLExpression.
type SQLExpression struct {
	From    *interface{} `json:"from,omitempty"`
	GroupBy *struct {
		Expressions interface{}              `json:"expressions"`
		Type        SQLExpressionGroupByType `json:"type"`
	} `json:"groupBy,omitempty"`
	Limit   *int64 `json:"limit,omitempty"`
	OrderBy *struct {
		Name       *string `json:"name,omitempty"`
		Parameters *[]struct {
			Name *string                            `json:"name,omitempty"`
			Type SQLExpressionOrderByParametersType `json:"type"`
		} `json:"parameters,omitempty"`
		Type SQLExpressionOrderByType `json:"type"`
	} `json:"orderBy,omitempty"`
	OrderByDirection *string `json:"orderByDirection,omitempty"`
	Select           *struct {
		Name       *string `json:"name,omitempty"`
		Parameters *[]struct {
			Name *string                           `json:"name,omitempty"`
			Type SQLExpressionSelectParametersType `json:"type"`
		} `json:"parameters,omitempty"`
		Type SQLExpressionSelectType `json:"type"`
	} `json:"select,omitempty"`
	Where *struct {
		Expressions interface{}            `json:"expressions"`
		Type        SQLExpressionWhereType `json:"type"`
	} `json:"where,omitempty"`
}

// SQLExpressionGroupByType defines model for SQLExpression.GroupBy.Type.
type SQLExpressionGroupByType string

// SQLExpressionOrderByParametersType defines model for SQLExpression.OrderBy.Parameters.Type.
type SQLExpressionOrderByParametersType string

// SQLExpressionOrderByType defines model for SQLExpression.OrderBy.Type.
type SQLExpressionOrderByType string

// SQLExpressionSelectParametersType defines model for SQLExpression.Select.Parameters.Type.
type SQLExpressionSelectParametersType string

// SQLExpressionSelectType defines model for SQLExpression.Select.Type.
type SQLExpressionSelectType string

// SQLExpressionWhereType defines model for SQLExpression.Where.Type.
type SQLExpressionWhereType string
