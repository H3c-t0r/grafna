// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     public/app/plugins/gen.go
// Using jennies:
//     PluginGoTypesJenny
//
// Run 'make gen-cue' from repository root to regenerate.

package dataquery

// Defines values for EditorMode.
const (
	EditorModeBuilder EditorMode = "builder"

	EditorModeCode EditorMode = "code"
)

// Defines values for QueryEditorMode.
const (
	QueryEditorModeBuilder QueryEditorMode = "builder"

	QueryEditorModeCode QueryEditorMode = "code"
)

// LokiDataQuery defines model for LokiDataQuery.
type LokiDataQuery struct {
	// For mixed data sources the selected datasource is on the query level.
	// For non mixed scenarios this is undefined.
	// TODO find a better way to do this ^ that's friendly to schema
	// TODO this shouldn't be unknown but DataSourceRef | null
	Datasource *interface{} `json:"datasource,omitempty"`
	EditorMode *EditorMode  `json:"editorMode,omitempty"`

	// the LogQL query
	Expr string `json:"expr"`

	// true if query is disabled (ie should not be returned to the dashboard)
	Hide *bool `json:"hide,omitempty"`

	// @deprecated, now use queryType
	Instant *bool `json:"instant,omitempty"`

	// Unique, guid like, string used in explore mode
	Key *string `json:"key,omitempty"`

	// used to override the name of the series
	LegendFormat *string `json:"legendFormat,omitempty"`

	// limit the number of log rows returned
	MaxLines *int64 `json:"maxLines,omitempty"`

	// Specify the query flavor
	// TODO make this required and give it a default
	QueryType *string `json:"queryType,omitempty"`

	// @deprecated, now use queryType
	Range *bool `json:"range,omitempty"`

	// A - Z
	RefId      string `json:"refId"`
	Resolution *int64 `json:"resolution,omitempty"`
}

// EditorMode defines model for LokiDataQuery.EditorMode.
type EditorMode string

// QueryEditorMode defines model for QueryEditorMode.
type QueryEditorMode string
