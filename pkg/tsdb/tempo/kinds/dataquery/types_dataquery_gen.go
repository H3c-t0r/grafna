// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     public/app/plugins/gen.go
// Using jennies:
//     PluginGoTypesJenny
//
// Run 'make gen-cue' from repository root to regenerate.

package dataquery

// Defines values for TempoQueryType.
const (
	TempoQueryTypeClear TempoQueryType = "clear"

	TempoQueryTypeNativeSearch TempoQueryType = "nativeSearch"

	TempoQueryTypeSearch TempoQueryType = "search"

	TempoQueryTypeServiceMap TempoQueryType = "serviceMap"

	TempoQueryTypeTraceql TempoQueryType = "traceql"

	TempoQueryTypeUpload TempoQueryType = "upload"
)

// TempoDataQuery defines model for TempoDataQuery.
type TempoDataQuery struct {
	// For mixed data sources the selected datasource is on the query level.
	// For non mixed scenarios this is undefined.
	// TODO find a better way to do this ^ that's friendly to schema
	// TODO this shouldn't be unknown but DataSourceRef | null
	Datasource *interface{} `json:"datasource,omitempty"`

	// true if query is disabled (ie should not be returned to the dashboard)
	Hide *bool `json:"hide,omitempty"`

	// Unique, guid like, string used in explore mode
	Key         *string  `json:"key,omitempty"`
	Limit       *float32 `json:"limit,omitempty"`
	MaxDuration *string  `json:"maxDuration,omitempty"`
	MinDuration *string  `json:"minDuration,omitempty"`
	Query       string   `json:"query"`

	// Specify the query flavor
	// TODO make this required and give it a default
	QueryType *string `json:"queryType,omitempty"`

	// A - Z
	RefId           string  `json:"refId"`
	Search          *string `json:"search,omitempty"`
	ServiceMapQuery *string `json:"serviceMapQuery,omitempty"`
	ServiceName     *string `json:"serviceName,omitempty"`
	SpanName        *string `json:"spanName,omitempty"`
}

// search = Loki search, nativeSearch = Tempo search for backwards compatibility
type TempoQueryType string
