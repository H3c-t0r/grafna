// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     public/app/plugins/gen.go
// Using jennies:
//     TSTypesJenny
//     PluginTSTypesJenny
//
// Run 'make gen-cue' from repository root to regenerate.

import * as ui from '@grafana/schema';

export const PanelCfgModelVersion = Object.freeze([0, 0]);

export enum HeatmapColorMode {
  Opacity = 'opacity',
  Scheme = 'scheme',
}

export enum HeatmapColorScale {
  Exponential = 'exponential',
  Linear = 'linear',
}

export interface HeatmapColorOptions {
  exponent: number;
  fill: string;
  max?: number;
  min?: number;
  mode: HeatmapColorMode;
  reverse: boolean;
  scale: HeatmapColorScale;
  scheme: string;
  steps: number;
}

export interface YAxisConfig extends ui.AxisConfig {
  decimals?: number;
  max?: number;
  min?: number;
  reverse?: boolean;
  unit?: string;
}

export interface CellValues {
  decimals?: number;
  unit?: string;
}

export interface FilterValueRange {
  ge?: number;
  le?: number;
}

export interface HeatmapTooltip {
  show: boolean;
  yHistogram?: boolean;
}

export interface HeatmapLegend {
  show: boolean;
}

export interface ExemplarConfig {
  color: string;
}

export interface RowsHeatmapOptions {
  layout?: ui.HeatmapCellLayout;
  value?: string;
}

export interface PanelOptions {
  calculate?: boolean;
  calculation?: ui.HeatmapCalculationOptions;
  cellGap?: number;
  cellRadius?: number;
  cellValues?: CellValues;
  color: HeatmapColorOptions;
  exemplars: ExemplarConfig;
  filterValues?: FilterValueRange;
  legend: HeatmapLegend;
  rowsFrame?: RowsHeatmapOptions;
  showValue: ui.VisibilityMode;
  tooltip: HeatmapTooltip;
  yAxis: YAxisConfig;
}

export const defaultPanelOptions: Partial<PanelOptions> = {
  calculate: false,
  cellGap: 1,
  cellValues: {},
  color: {
    mode: HeatmapColorMode.Scheme,
    scheme: 'Oranges',
    fill: 'dark-orange',
    scale: HeatmapColorScale.Exponential,
    reverse: false,
    exponent: 0.5,
    steps: 64,
  },
  exemplars: {
    color: 'rgba(255,0,255,0.7)',
  },
  filterValues: {
    le: 1e-09,
  },
  legend: {
    show: true,
  },
  rowsFrame: {
    layout: ui.HeatmapCellLayout.auto,
  },
  showValue: ui.VisibilityMode.Auto,
  tooltip: {
    show: true,
    yHistogram: false,
  },
  yAxis: {
    axisPlacement: ui.AxisPlacement.Left,
  },
};

export interface PanelFieldConfig extends ui.HideableFieldConfig {
  scaleDistribution?: ui.ScaleDistributionConfig;
}
