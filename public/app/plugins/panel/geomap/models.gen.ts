// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     public/app/plugins/gen.go
// Using jennies:
//     TSTypesJenny
//     PluginTSTypesJenny
//
// Run 'make gen-cue' from repository root to regenerate.

export const PanelModelVersion = Object.freeze([0, 0]);

export interface PanelOptions {
  basemap: MapLayerOptions;
  controls: ControlsOptions;
  layers: Array<MapLayerOptions>;
  tooltip: TooltipOptions;
  view: MapViewConfig;
}

export const defaultPanelOptions: Partial<PanelOptions> = {
  layers: [],
};

export interface MapViewConfig {
  allLayers?: boolean;
  id: MapCenterID;
  lastOnly?: boolean;
  lat?: number;
  layer?: string;
  lon?: number;
  maxZoom?: number;
  minZoom?: number;
  padding?: number;
  shared?: boolean;
  zoom?: number;
}

export const defaultMapViewConfig: Partial<MapViewConfig> = {
  allLayers: true,
  lat: 0,
  lon: 0,
  zoom: 1,
};

/**
 * TODO this is a copy of a type from @grafana/data
 */
export interface MapLayerOptions {
  /**
   * Custom options depending on the type
   */
  config?: Record<string, unknown>;
  /**
   * Defines which data query refId is associated with the layer
   */
  filterData?: {
    id: string;
    options?: Record<string, unknown>;
  };
  /**
   * Common method to define geometry fields
   */
  location?: {
    mode: FrameGeometrySourceMode;
    /**
     * Field mappings
     */
    geohash?: string;
    latitude?: string;
    longitude?: string;
    h3?: string;
    wkt?: string;
    lookup?: string;
    /**
     * Path to Gazetteer
     */
    gazetteer?: string;
  };
  /**
   * configured unique display name
   */
  name: string;
  /**
   * Common properties:
   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Base-BaseLayer.html
   * Layer opacity (0-1)
   */
  opacity?: number;
  /**
   * Check tooltip (defaults to true)
   */
  tooltip?: boolean;
  type: string;
}

export interface ControlsOptions {
  /**
   * let the mouse wheel zoom
   */
  mouseWheelZoom?: boolean;
  scaleUnits?: Units;
  /**
   * Lower right
   */
  showAttribution?: boolean;
  /**
   * Show debug
   */
  showDebug?: boolean;
  /**
   * Show measure
   */
  showMeasure?: boolean;
  /**
   * Scale options
   */
  showScale?: boolean;
  /**
   * Zoom (upper left)
   */
  showZoom?: boolean;
}

/**
 * TODO this is a type from a 3rd party library
 */
export type Units = ('degrees' | 'imperial' | 'nautical' | 'metric' | 'us');

export interface TooltipOptions {
  mode: TooltipMode;
}

export enum TooltipMode {
  Details = 'details',
  None = 'none',
}

export enum FrameGeometrySourceMode {
  Auto = 'auto',
  Coords = 'coords',
  Geohash = 'geohash',
  Lookup = 'lookup',
}

export enum MapCenterID {
  Coords = 'coords',
  Fit = 'fit',
  Zero = 'zero',
}
