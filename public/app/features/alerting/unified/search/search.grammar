@top AlertRuleSearch { expression+ }

@dialects { dsFilter, nsFilter, labelFilter, groupFilter, ruleFilter, stateFilter, typeFilter, rules }

expression { (FilterExpression | FreeFormExpression) expression }

FreeFormExpression { word (colon word)* | stringWithQuotes }

FilterExpression {
 filter<DsToken> |
 filter<NsToken> |
 filter<LabelToken> |
 filter<GroupToken> |
 filter<RuleToken> |
 filter<StateToken> |
 filter<TypeToken>
}

filter<token> { token FilterValue }

@tokens {
  colon { ":" }

  // Special characters (except colon, quotes and space), Latin characters, extended latin and emoji
  allowedInputChar { $[!#$%&'()*+,-./] | $[\u{0030}-\u{0039}] | $[\u{003b}-\u{1eff}] | $[\u{2030}-\u{1faff}] }
  word { allowedInputChar+ }

  allowedInputCharOrColon { allowedInputChar | colon }
  allowedInputCharOrColonOrWhitespace { allowedInputCharOrColon | @whitespace }
  stringWithQuotes { ("\"" allowedInputCharOrColonOrWhitespace+ "\"") }

  FilterValue { allowedInputCharOrColon+ | stringWithQuotes }
  filterToken<type> { type colon }

  DsToken[@dialect=dsFilter] { filterToken<"ds"> }
  NsToken[@dialect=nsFilter] { filterToken<"ns"> }
  LabelToken[@dialect=labelFilter] { filterToken<"label"> }
  GroupToken[@dialect=groupFilter] { filterToken<"group"> }
  RuleToken[@dialect=ruleFilter] { filterToken<"rule"> }
  StateToken[@dialect=stateFilter] { filterToken<"state"> }
  TypeToken[@dialect=typeFilter] { filterToken<"type"> }

  @precedence { DsToken, word }
  @precedence { NsToken, word }
  @precedence { LabelToken, word }
  @precedence { GroupToken, word }
  @precedence { RuleToken, word }
  @precedence { StateToken, word }
  @precedence { TypeToken, word }
}

