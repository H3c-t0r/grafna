import { __makeTemplateObject } from "tslib";
import { stylesFactory } from '../../themes';
import { css as cssCore } from '@emotion/react';
import { css } from '@emotion/css';
export var getStyles = stylesFactory(function (theme, isHorizontal) {
    var spacing = theme.spacing;
    var railColor = theme.colors.border.strong;
    var trackColor = theme.colors.primary.main;
    var handleColor = theme.colors.primary.main;
    var blueOpacity = theme.colors.primary.transparent;
    var hoverSyle = "box-shadow: 0px 0px 0px 6px " + blueOpacity;
    return {
        container: css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n      width: 100%;\n      margin: ", ";\n      height: ", ";\n    "], ["\n      width: 100%;\n      margin: ", ";\n      height: ", ";\n    "])), isHorizontal ? 'none' : "" + spacing(1, 3, 1, 1), isHorizontal ? 'auto' : '100%'),
        slider: css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n      .rc-slider {\n        display: flex;\n        flex-grow: 1;\n        margin-left: 7px; // half the size of the handle to align handle to the left on 0 value\n      }\n      .rc-slider-vertical .rc-slider-handle {\n        margin-top: -10px;\n      }\n      .rc-slider-handle {\n        border: none;\n        background-color: ", ";\n        box-shadow: ", ";\n        cursor: pointer;\n      }\n      .rc-slider-handle:hover,\n      .rc-slider-handle:active,\n      .rc-slider-handle:focus,\n      .rc-slider-handle-click-focused:focus,\n      .rc-slider-dot-active {\n        ", ";\n      }\n      .rc-slider-track {\n        background-color: ", ";\n      }\n      .rc-slider-rail {\n        background-color: ", ";\n        cursor: pointer;\n      }\n    "], ["\n      .rc-slider {\n        display: flex;\n        flex-grow: 1;\n        margin-left: 7px; // half the size of the handle to align handle to the left on 0 value\n      }\n      .rc-slider-vertical .rc-slider-handle {\n        margin-top: -10px;\n      }\n      .rc-slider-handle {\n        border: none;\n        background-color: ", ";\n        box-shadow: ", ";\n        cursor: pointer;\n      }\n      .rc-slider-handle:hover,\n      .rc-slider-handle:active,\n      .rc-slider-handle:focus,\n      .rc-slider-handle-click-focused:focus,\n      .rc-slider-dot-active {\n        ", ";\n      }\n      .rc-slider-track {\n        background-color: ", ";\n      }\n      .rc-slider-rail {\n        background-color: ", ";\n        cursor: pointer;\n      }\n    "])), handleColor, theme.shadows.z1, hoverSyle, trackColor, railColor),
        /** Global component from @emotion/core doesn't accept computed classname string returned from css from emotion.
         * It accepts object containing the computed name and flattened styles returned from css from @emotion/core
         * */
        tooltip: cssCore(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n      body {\n        .rc-slider-tooltip {\n          cursor: grab;\n          user-select: none;\n          z-index: ", ";\n        }\n\n        .rc-slider-tooltip-inner {\n          color: ", ";\n          background-color: transparent !important;\n          border-radius: 0;\n          box-shadow: none;\n        }\n\n        .rc-slider-tooltip-placement-top .rc-slider-tooltip-arrow {\n          display: none;\n        }\n\n        .rc-slider-tooltip-placement-top {\n          padding: 0;\n        }\n      }\n    "], ["\n      body {\n        .rc-slider-tooltip {\n          cursor: grab;\n          user-select: none;\n          z-index: ", ";\n        }\n\n        .rc-slider-tooltip-inner {\n          color: ", ";\n          background-color: transparent !important;\n          border-radius: 0;\n          box-shadow: none;\n        }\n\n        .rc-slider-tooltip-placement-top .rc-slider-tooltip-arrow {\n          display: none;\n        }\n\n        .rc-slider-tooltip-placement-top {\n          padding: 0;\n        }\n      }\n    "])), theme.zIndex.tooltip, theme.colors.text.primary),
        sliderInput: css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      width: 100%;\n    "], ["\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      width: 100%;\n    "]))),
        sliderInputVertical: css(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n      flex-direction: column;\n      height: 100%;\n\n      .rc-slider {\n        margin: 0;\n        order: 2;\n      }\n    "], ["\n      flex-direction: column;\n      height: 100%;\n\n      .rc-slider {\n        margin: 0;\n        order: 2;\n      }\n    "]))),
        sliderInputField: css(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n      margin-left: ", ";\n      width: 60px;\n      input {\n        text-align: center;\n      }\n    "], ["\n      margin-left: ", ";\n      width: 60px;\n      input {\n        text-align: center;\n      }\n    "])), theme.spacing(3)),
        sliderInputFieldVertical: css(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n      margin: 0 0 ", " 0;\n      order: 1;\n    "], ["\n      margin: 0 0 ", " 0;\n      order: 1;\n    "])), theme.spacing(3)),
    };
});
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;
//# sourceMappingURL=styles.js.map