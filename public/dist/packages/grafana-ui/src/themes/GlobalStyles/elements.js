import { __makeTemplateObject } from "tslib";
import { css } from '@emotion/react';
import { getFocusStyles } from '../mixins';
export function getElementStyles(theme) {
    return css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    html {\n      -ms-overflow-style: scrollbar;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      height: 100%;\n      font-size: ", "px;\n      font-family: ", ";\n      line-height: ", ";\n      font-kerning: normal;\n    }\n\n    body {\n      height: 100%;\n      width: 100%;\n      position: absolute;\n      color: ", ";\n      background-color: ", ";\n      ", "\n    }\n\n    h1,\n    .h1 {\n      ", "\n    }\n    h2,\n    .h2 {\n      ", "\n    }\n    h3,\n    .h3 {\n      ", "\n    }\n    h4,\n    .h4 {\n      ", "\n    }\n    h5,\n    .h5 {\n      ", "\n    }\n    h6,\n    .h6 {\n      ", "\n    }\n\n    p {\n      margin: 0 0 ", ";\n    }\n\n    button {\n      letter-spacing: ", ";\n\n      &:focus-visible {\n        outline: ", ";\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n\n    // Ex: 14px base font * 85% = about 12px\n    small {\n      font-size: ", ";\n    }\n\n    b,\n    strong {\n      font-weight: ", ";\n    }\n\n    em {\n      font-style: italic;\n      color: ", ";\n    }\n\n    cite {\n      font-style: normal;\n    }\n\n    // Utility classes\n    .muted {\n      color: ", ";\n    }\n\n    a.muted:hover,\n    a.muted:focus {\n      color: ", ";\n    }\n\n    .text-warning {\n      color: ", ";\n\n      &:hover,\n      &:focus {\n        color: ", ";\n      }\n    }\n\n    .text-error {\n      color: ", ";\n\n      &:hover,\n      &:focus {\n        color: ", ";\n      }\n    }\n\n    .text-success {\n      color: $success-text-color;\n\n      &:hover,\n      &:focus {\n        color: ", ";\n      }\n    }\n\n    a {\n      cursor: pointer;\n      color: ", ";\n      text-decoration: none;\n\n      &:focus {\n        outline: none;\n      }\n\n      &:focus-visible {\n        ", "\n      }\n\n      &: [disabled] {\n        cursor: default;\n        pointer-events: none !important;\n      }\n    }\n\n    .text-link {\n      text-decoration: underline;\n    }\n\n    .text-left {\n      text-align: left;\n    }\n\n    .text-right {\n      text-align: right;\n    }\n\n    .text-center {\n      text-align: center;\n    }\n  "], ["\n    html {\n      -ms-overflow-style: scrollbar;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      height: 100%;\n      font-size: ", "px;\n      font-family: ", ";\n      line-height: ", ";\n      font-kerning: normal;\n    }\n\n    body {\n      height: 100%;\n      width: 100%;\n      position: absolute;\n      color: ", ";\n      background-color: ", ";\n      ", "\n    }\n\n    h1,\n    .h1 {\n      ", "\n    }\n    h2,\n    .h2 {\n      ", "\n    }\n    h3,\n    .h3 {\n      ", "\n    }\n    h4,\n    .h4 {\n      ", "\n    }\n    h5,\n    .h5 {\n      ", "\n    }\n    h6,\n    .h6 {\n      ", "\n    }\n\n    p {\n      margin: 0 0 ", ";\n    }\n\n    button {\n      letter-spacing: ", ";\n\n      &:focus-visible {\n        outline: ", ";\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n\n    // Ex: 14px base font * 85% = about 12px\n    small {\n      font-size: ", ";\n    }\n\n    b,\n    strong {\n      font-weight: ", ";\n    }\n\n    em {\n      font-style: italic;\n      color: ", ";\n    }\n\n    cite {\n      font-style: normal;\n    }\n\n    // Utility classes\n    .muted {\n      color: ", ";\n    }\n\n    a.muted:hover,\n    a.muted:focus {\n      color: ", ";\n    }\n\n    .text-warning {\n      color: ", ";\n\n      &:hover,\n      &:focus {\n        color: ", ";\n      }\n    }\n\n    .text-error {\n      color: ", ";\n\n      &:hover,\n      &:focus {\n        color: ", ";\n      }\n    }\n\n    .text-success {\n      color: $success-text-color;\n\n      &:hover,\n      &:focus {\n        color: ", ";\n      }\n    }\n\n    a {\n      cursor: pointer;\n      color: ", ";\n      text-decoration: none;\n\n      &:focus {\n        outline: none;\n      }\n\n      &:focus-visible {\n        ", "\n      }\n\n      &: [disabled] {\n        cursor: default;\n        pointer-events: none !important;\n      }\n    }\n\n    .text-link {\n      text-decoration: underline;\n    }\n\n    .text-left {\n      text-align: left;\n    }\n\n    .text-right {\n      text-align: right;\n    }\n\n    .text-center {\n      text-align: center;\n    }\n  "])), theme.typography.htmlFontSize, theme.typography.fontFamily, theme.typography.body.lineHeight, theme.colors.text.primary, theme.colors.background.canvas, getVariantStyles(theme.typography.body), getVariantStyles(theme.typography.h1), getVariantStyles(theme.typography.h2), getVariantStyles(theme.typography.h3), getVariantStyles(theme.typography.h4), getVariantStyles(theme.typography.h5), getVariantStyles(theme.typography.h6), theme.spacing(2), theme.typography.body.letterSpacing, getFocusStyles(theme), theme.typography.bodySmall.fontSize, theme.typography.fontWeightMedium, theme.colors.text.primary, theme.colors.text.secondary, theme.colors.text.primary, theme.colors.warning.text, theme.colors.emphasize(theme.colors.warning.text, 0.15), theme.colors.error.text, theme.colors.emphasize(theme.colors.error.text, 0.15), theme.colors.emphasize(theme.colors.success.text, 0.15), theme.colors.text.primary, getFocusStyles(theme));
}
export function getVariantStyles(variant) {
    return "\n    margin: 0;\n    font-size: " + variant.fontSize + ";    \n    line-height: " + variant.lineHeight + ";\n    font-weight: " + variant.fontWeight + ";\n    letter-spacing: " + variant.letterSpacing + ";\n    font-family: " + variant.fontFamily + ";\n    margin-bottom: 0.45em;\n  ";
}
var templateObject_1;
//# sourceMappingURL=elements.js.map