import { PluginType } from '@grafana/data';
import { mapPartialArrayObject } from './utils';
export const createMockInstanceSetttings = (overrides) => {
    var _a, _b, _c, _d, _e;
    const metaOverrides = overrides === null || overrides === void 0 ? void 0 : overrides.meta;
    return Object.assign(Object.assign({ url: '/ds/1', id: 1, uid: 'abc', type: 'azuremonitor', access: 'proxy', name: 'azure', readOnly: false }, overrides), { meta: Object.assign(Object.assign({ id: 'grafana-azure-monitor-datasource', name: 'Azure Monitor', type: PluginType.datasource, module: 'path_to_module', baseUrl: 'base_url' }, metaOverrides), { info: Object.assign(Object.assign({ description: 'Azure Monitor', updated: 'updated', version: '1.0.0' }, metaOverrides === null || metaOverrides === void 0 ? void 0 : metaOverrides.info), { screenshots: mapPartialArrayObject({ name: 'Azure Screenshot', path: 'path_to_screenshot' }, (_a = metaOverrides === null || metaOverrides === void 0 ? void 0 : metaOverrides.info) === null || _a === void 0 ? void 0 : _a.screenshots), links: mapPartialArrayObject({ name: 'Azure Link', url: 'link_url', target: '_blank' }, (_b = metaOverrides === null || metaOverrides === void 0 ? void 0 : metaOverrides.info) === null || _b === void 0 ? void 0 : _b.links), author: Object.assign({ name: 'test' }, (_c = metaOverrides === null || metaOverrides === void 0 ? void 0 : metaOverrides.info) === null || _c === void 0 ? void 0 : _c.author), logos: Object.assign({ large: 'large.logo', small: 'small.logo' }, (_d = metaOverrides === null || metaOverrides === void 0 ? void 0 : metaOverrides.info) === null || _d === void 0 ? void 0 : _d.logos), build: Object.assign({ time: 0, repo: 'repo', branch: 'branch', hash: 'hash', number: 1, pr: 1 }, (_e = metaOverrides === null || metaOverrides === void 0 ? void 0 : metaOverrides.info) === null || _e === void 0 ? void 0 : _e.build) }) }), jsonData: Object.assign({ cloudName: 'azuremonitor', azureAuthType: 'clientsecret', 
            // monitor
            tenantId: 'abc-123', clientId: 'def-456', subscriptionId: 'ghi-789' }, overrides === null || overrides === void 0 ? void 0 : overrides.jsonData) });
};
//# sourceMappingURL=instanceSettings.js.map