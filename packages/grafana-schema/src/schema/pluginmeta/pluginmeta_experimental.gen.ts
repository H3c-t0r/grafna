// This file is autogenerated. DO NOT EDIT.
//
// Run "make gen-cue" from repository root to regenerate.
//
// Derived from the Thema lineage at pkg/coremodel/pluginmeta


// This model is a WIP and not yet canonical. Consequently, its members are
// not exported to exclude it from grafana-schema's public API surface.

interface Pluginmeta {
  alerting?: boolean;
  annotations?: boolean;
  autoEnabled?: boolean;
  backend?: boolean;
  category?: ('tsdb' | 'logging' | 'cloud' | 'tracing' | 'sql' | 'enterprise' | 'other');
  dependencies: {
    grafanaVersion?: string;
    grafanaDependency: string;
    plugins?: {
      id: string;
      type: ('app' | 'datasource' | 'panel');
      name: string;
      version: string;
    }[];
  };
  enterpriseFeatures?: {
    healthDiagnosticsErrors?: boolean;
  };
  executable?: string;
  hiddenQueries?: boolean;
  id: string;
  includes?: {
    uid?: string;
    type?: ('dashboard' | 'page' | 'panel' | 'datasource');
    name?: string;
    component?: string;
    role?: ('Admin' | 'Editor' | 'Viewer');
    path?: string;
    addToNav?: boolean;
    defaultNav?: boolean;
    icon?: string;
  }[];
  info: {
    author?: {
      name?: string;
      email?: string;
      url?: string;
    };
    build?: {
      time?: number;
      repo?: string;
      branch?: string;
      hash?: string;
      number?: number;
      pr?: number;
    };
    description?: string;
    keywords: string[];
    links?: {
      name?: string;
      url?: string;
    }[];
    logos: {
      small: string;
      large: string;
    };
    screenshots?: {
      name?: string;
      path?: string;
    }[];
    updated: string;
    version: string;
  };
  logs?: boolean;
  metrics?: boolean;
  name: string;
  preload?: boolean;
  queryOptions?: {
    maxDataPoints?: boolean;
    minInterval?: boolean;
    cacheTimeout?: boolean;
  };
  routes?: {
    path?: string;
    method?: string;
    url?: string;
    reqSignedIn?: boolean;
    reqRole?: string;
    headers?: any[];
    body?: {};
    tokenAuth?: {
      url?: string;
      scopes?: string[];
      params?: {
        grant_type?: string;
        client_id?: string;
        client_secret?: string;
        resource?: string;
      };
    };
    jwtTokenAuth?: {
      url?: string;
      scopes?: string[];
      params?: {
        token_uri?: string;
        client_email?: string;
        private_key?: string;
      };
    };
  }[];
  skipDataQuery?: boolean;
  state?: ('alpha' | 'beta');
  streaming?: boolean;
  tables?: boolean;
  tracing?: boolean;
  type: ('app' | 'datasource' | 'panel');
}

const defaultPluginmeta: Partial<Pluginmeta> = {
  includes: [],
  routes: [],
};
